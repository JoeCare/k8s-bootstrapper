{{- if .Values.domain }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-argocd
  namespace: argocd
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-ci"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - argocd.{{ .Values.domain }}
    secretName: argocd-secret
  rules:
  - host: argocd.{{ .Values.domain }}
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: argocd-server
            port:
                name: https
                number: 8080            

# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: ingress-bots
#   namespace: bots
#   annotations:
#     cert-manager.io/cluster-issuer: "letsencrypt-ci"
# spec:
#   ingressClassName: nginx
#   tls:
#   - hosts:
#     - bots.{{ .Values.domain }}
#     secretName: nginx-bots-tls
#   rules:
#   - host: bots.{{ .Values.domain }}
#     http:
#       paths:
#       - path: /
#         pathType: ImplementationSpecific
#         backend:
#           service:
#             name: bots
#             port: 
#                 number: 8080
# ---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: ingress-grafana
#   namespace: observability
#   annotations:
#     cert-manager.io/cluster-issuer: "letsencrypt-ci"
# spec:
#   ingressClassName: nginx
#   tls:
#   - hosts:
#     - grafana.{{ .Values.domain }}
#     secretName: nginx-grafana-tls
#   rules:
#   - host: grafana.{{ .Values.domain }}
#     http:
#       paths:
#       - path: /
#         pathType: Prefix
#         backend:
#           service:
#             name: observability-grafana
#             port:
#                 number: 80                       
{{- end }}